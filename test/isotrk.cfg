process ISO = {

include "Configuration/Examples/data/MessageLogger.cfi"

  service = Timing {}
  service = SimpleMemoryCheck {
    untracked int32 ignoreTotal = 1 # default is one
  } 

// Here we assume that input is already in reco format.


  source = PoolSource {
    untracked vstring fileNames = {
#    'rfio:/castor/cern.ch/cms/T0Prototype/reco/SLC4/092/minbias/FADFC03E-C623-DB11-A3D4-00304875668B.RECO.root'
# '/store/unmerged/RelVal/2006/8/13/RelVal090SingleEPt35/GEN-SIM-DIGI-RECO/0005/36425AEE-1D2B-DB11-9742-00304885B014.root'
#   'file:/afs/cern.ch/user/m/michals/scratch0/myreco4.root'
#    'rfio:/castor/cern.ch/cms/T0Prototype/reco/SLC4/092/ZMuMu/B009BDC0-D934-DB11-B998-000E0C4DE5B3.RECO.root'
 '/store/unmerged/RelVal/2006/9/19/RelVal100Higgs-ZZ-4E/GEN-SIM-DIGI-RECO/0005/D8169C2C-0A48-DB11-B3B3-000E0C4D379C.root'
 }
    untracked int32 maxEvents = 100
  }

  include "Calibration/HcalAlCaRecoProducers/data/alcastreamHcalIsotrk.cff"
  include "Calibration/HcalAlCaRecoProducers/data/alcastreamHcalIsotrkOutput.cff"

  module IsoRecos = PoolOutputModule {
    untracked string fileName = 'isotracks4.root'
    using alcastreamHcalIsotrkOutput		
  } 

  path pathAlcastreamHcalIsotrk = { seqAlcastreamHcalIsotrk }

  endpath e = {IsoRecos}	
}

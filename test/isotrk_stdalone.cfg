process ISO = {
include "Configuration/Examples/data/MessageLogger.cfi"
  service = Timing {}
  service = SimpleMemoryCheck {
    untracked int32 ignoreTotal = 1 # default is one
  } 

// Here we assume that input is already in reco format.

  source = PoolSource {
    untracked vstring fileNames = {
//    'file:/afs/cern.ch/user/m/michals/scratch0/myreco4.root'
//    'file:/afs/cern.ch/user/m/michals/scratch0/isotracks_test.root'
//'rfio:cmslcgse02:/data1/hufnagel/T0/CSA06Test/CSA06-103-os-CMSSW_1_0_2-RECO-He161069e60f9472aa003070c3d42e060-0/AlcaReco/CMSSW_1_0_3-AlcaReco-Ha00a97bc2b5c3d92ff370d409a2c24f3/1012/041BD9DA-E659-DB11-AD9D-0002B3AFB50A.root'
'/store/mc/2007/1/26/mc-onsel-120_PU_Minbias-DIGI-RECO-NoPU/0000/00B0ABE5-BEB3-DB11-B307-003048322C60.root'
    }
    untracked int32 maxEvents = 100
  }

  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
#  include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  include "Geometry/CaloEventSetup/data/CaloTopology.cfi"
#  include "Geometry/CaloEventSetup/data/CaloTowerConstituents.cfi"

  module IsoProd = AlCaIsoTracksProducer {
    untracked string inputTrackLabel = 'generalTracks'
    untracked string ecalRecHitsLabel = 'ecalRecHit'
    untracked string ebRecHitsInstance = 'EcalRecHitsEB'
    untracked string eeRecHitsInstance = 'EcalRecHitsEE'
    untracked string hcalRecHitsLabel = 'hbhereco'
    untracked double coneCut = 50.
    untracked double pCut = 2.
    untracked double ptCut = 2.
    untracked double vtxCut = 0.05
    untracked double ecalCut = 8.
    untracked int32 histoFlag = 0
}

  module IsoRecos = PoolOutputModule {
    untracked string fileName = '/afs/cern.ch/user/m/michals/scratch0/isotracks_test.root'
    untracked vstring outputCommands =
    {
      "drop *",
      "keep recoTracks_IsoProd_*_*",
      "keep HBHERecHitsSorted_IsoProd_*_*",
      "keep EcalRecHitsSorted_IsoProd_*_*"
//      "keep recoTracks_ctfWithMaterialTracks_*_*",
//      "keep HBHERecHitsSorted_hbhereco_*_*",
//      "keep EcalRecHitsSorted_ecalRecHit_*_*"
    }
  } 

  path p = {IsoProd}
  endpath e = {IsoRecos}	
}
